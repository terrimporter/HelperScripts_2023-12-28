#!/usr/bin/perl
#Oct.12,2010 by TErri Porter
#Modify to grab seeds for clusters that contain a lepidoptera reference sequence
#usage $perl grab_ref_seed_fasta.plx results.fasta
#Sept.27,2010 by Terri Porter
#Script to grab just the seed fasta from the fasta file generated by uclust2fasta.  Then use the seedfasta to get the fasta stats for dereplicated dataset.
#usage $perl grab_seed_fasta.plx < results.fasta > results_seed.fasta

use strict;
use warnings;

#declare variables
my $line;
my $a=0;
my $b=0;
my $header;
my $sequence;
my $c=0;

#declare array
my @header;
my @sequence;

open (IN,"<",$ARGV[0])|| die ("Error: $!\n");
open (OUT1,">>","filtered_NEWLEP.txt") || die ("Error: $!\n");
open (OUT2,">>","filtered_withoutNEWLEP.txt") || die ("Error: $!\n");

while (<IN>) {
	$line = $_;
	chomp $line;
	if ($a==0) {
		if ($line =~ /^>/ && $line =~ /^>\d+\|\*/) {
			$a=1;
			push(@header,$line);
		}
	}
	if ($a==1){
		if ($line !~ /^>/) {
			push (@sequence,$line);
			$c++;
		}
		elsif ($line =~ /^>/ && $line !~ /^>\d+\|\*/){
			push (@header,$line);
		}
		if ($line =~ /^>/ && $line =~ /^>\d+\|\*/) {
			#$a=0;
			#process existing arrays
			foreach $header (@header) {
				if ($header =~ /NEWLEP/) {
					$b=1;
				}
			}
			if ($b==1 && $c>=2) {
				$header = shift @header;
				print OUT1 "$header\n";
				$sequence = shift @sequence;
				print OUT1 "$sequence\n";
			}
			elsif ($b==0 && $c>=1) {
				$header = shift @header;
				print OUT2 "$header\n";
				$sequence = shift @sequence;
				print OUT2 "$sequence\n";
			}
			$b=0;
			$c=0;
			#clear arrays
			@header=();
			@sequence=();
			#$a=1;
			#push to newly emptied array
			push(@header,$line);
		}
	}
}

